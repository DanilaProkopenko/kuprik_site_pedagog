{"ast":null,"code":"import _slicedToArray from \"/Users/danilaprokopenko/Desktop/kuprik_site/pedagog-visit-card/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/danilaprokopenko/Desktop/kuprik_site/pedagog-visit-card/src/contexts/AdminContext.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport contentData from '../content.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var AdminContext = /*#__PURE__*/createContext();\nexport var AdminProvider = function AdminProvider(_ref) {\n  _s();\n  var children = _ref.children;\n  // Сначала пытаемся взять данные из localStorage, если их нет — используем contentData\n  var _useState = useState(function () {\n      var savedContent = localStorage.getItem('siteContent');\n      return savedContent ? JSON.parse(savedContent) : contentData;\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    content = _useState2[0],\n    setContent = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isAdmin = _useState4[0],\n    setIsAdmin = _useState4[1];\n  useEffect(function () {\n    // Проверка авторизации администратора\n    var adminStatus = localStorage.getItem('isAdmin') === 'true';\n    setIsAdmin(adminStatus);\n  }, []);\n  var login = function login(password) {\n    // Простая проверка пароля (в реальном приложении нужно использовать безопасные методы)\n    if (password === 'admin123') {\n      setIsAdmin(true);\n      localStorage.setItem('isAdmin', 'true');\n      return true;\n    }\n    return false;\n  };\n  var logout = function logout() {\n    setIsAdmin(false);\n    localStorage.removeItem('isAdmin');\n  };\n  var updateContent = function updateContent(newContent) {\n    setContent(newContent);\n    localStorage.setItem('siteContent', JSON.stringify(newContent)); // Сохраняем в localStorage\n    // В реальном приложении здесь должна быть отправка на сервер\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: {\n      content: content,\n      isAdmin: isAdmin,\n      login: login,\n      logout: logout,\n      updateContent: updateContent\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n_s(AdminProvider, \"72zdoSIl9/F0m3kNZfe2CCc/4fY=\");\n_c = AdminProvider;\nvar _c;\n$RefreshReg$(_c, \"AdminProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","contentData","jsxDEV","_jsxDEV","AdminContext","AdminProvider","_ref","_s","children","_useState","savedContent","localStorage","getItem","JSON","parse","_useState2","_slicedToArray","content","setContent","_useState3","_useState4","isAdmin","setIsAdmin","adminStatus","login","password","setItem","logout","removeItem","updateContent","newContent","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["/Users/danilaprokopenko/Desktop/kuprik_site/pedagog-visit-card/src/contexts/AdminContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport contentData from '../content.json';\n\nexport const AdminContext = createContext();\n\nexport const AdminProvider = ({ children }) => {\n  // Сначала пытаемся взять данные из localStorage, если их нет — используем contentData\n  const [content, setContent] = useState(() => {\n    const savedContent = localStorage.getItem('siteContent');\n    return savedContent ? JSON.parse(savedContent) : contentData;\n  });\n\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    // Проверка авторизации администратора\n    const adminStatus = localStorage.getItem('isAdmin') === 'true';\n    setIsAdmin(adminStatus);\n  }, []);\n\n  const login = (password) => {\n    // Простая проверка пароля (в реальном приложении нужно использовать безопасные методы)\n    if (password === 'admin123') {\n      setIsAdmin(true);\n      localStorage.setItem('isAdmin', 'true');\n      return true;\n    }\n    return false;\n  };\n\n  const logout = () => {\n    setIsAdmin(false);\n    localStorage.removeItem('isAdmin');\n  };\n\n  const updateContent = (newContent) => {\n    setContent(newContent);\n    localStorage.setItem('siteContent', JSON.stringify(newContent)); // Сохраняем в localStorage\n    // В реальном приложении здесь должна быть отправка на сервер\n  };\n\n  return (\n    <AdminContext.Provider value={{ content, isAdmin, login, logout, updateContent }}>\n      {children}\n    </AdminContext.Provider>\n  );\n};"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,WAAW,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,IAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAE3C,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAAC,EAAA;EAAA,IAAfC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EACtC;EACA,IAAAC,SAAA,GAA8BV,QAAQ,CAAC,YAAM;MAC3C,IAAMW,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACxD,OAAOF,YAAY,GAAGG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,GAAGT,WAAW;IAC9D,CAAC,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAP,SAAA;IAHKQ,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAK1B,IAAAI,UAAA,GAA8BpB,QAAQ,CAAC,KAAK,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1BpB,SAAS,CAAC,YAAM;IACd;IACA,IAAMuB,WAAW,GAAGZ,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,MAAM;IAC9DU,UAAU,CAACC,WAAW,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAIC,QAAQ,EAAK;IAC1B;IACA,IAAIA,QAAQ,KAAK,UAAU,EAAE;MAC3BH,UAAU,CAAC,IAAI,CAAC;MAChBX,YAAY,CAACe,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;MACvC,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;IACnBL,UAAU,CAAC,KAAK,CAAC;IACjBX,YAAY,CAACiB,UAAU,CAAC,SAAS,CAAC;EACpC,CAAC;EAED,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,UAAU,EAAK;IACpCZ,UAAU,CAACY,UAAU,CAAC;IACtBnB,YAAY,CAACe,OAAO,CAAC,aAAa,EAAEb,IAAI,CAACkB,SAAS,CAACD,UAAU,CAAC,CAAC,CAAC,CAAC;IACjE;EACF,CAAC;EAED,oBACE3B,OAAA,CAACC,YAAY,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEhB,OAAO,EAAPA,OAAO;MAAEI,OAAO,EAAPA,OAAO;MAAEG,KAAK,EAALA,KAAK;MAAEG,MAAM,EAANA,MAAM;MAAEE,aAAa,EAAbA;IAAc,CAAE;IAAArB,QAAA,EAC9EA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACY,CAAC;AAE5B,CAAC;AAAC/B,EAAA,CAzCWF,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}